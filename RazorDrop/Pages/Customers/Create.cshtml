@page
@model RazorDrop.Pages.Customers.CreateModel
@{
    ViewData["Title"] = "Create a new customer";
}

<div class="row">
    <div class="col-md-12">
        <h1>Create a new customer</h1>
        <p>
            Create a new customer by entering a customer name and selecting a country and region (if any).
        </p>
    </div>
</div>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="form-group">
            @Html.LabelFor(model => model.CustomerEditViewModel.CustomerId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CustomerEditViewModel.CustomerId,
                    new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.CustomerEditViewModel.CustomerId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CustomerEditViewModel.CustomerName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CustomerEditViewModel.CustomerName,
                  new { htmlAttributes = new { @class = "form-control", @autofocus = "autofocus", @required = true } })
                @Html.ValidationMessageFor(model => model.CustomerEditViewModel.CustomerId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(x => Model.CustomerEditViewModel.SelectedCountryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.DropDownListFor(x => Model.CustomerEditViewModel.SelectedCountryId,
                  new SelectList(Model.CustomerEditViewModel.Countries, "Value", "Text"),
                  htmlAttributes: new { @class = "form-control", id = "Country", @required = true })
                @Html.ValidationMessageFor(x => x.CustomerEditViewModel.SelectedCountryId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(x => Model.CustomerEditViewModel.SelectedRegionId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.DropDownListFor(x => Model.CustomerEditViewModel.SelectedRegionId,
                  new SelectList(Model.CustomerEditViewModel.Regions, "Value", "Text"),
                  htmlAttributes: new { @class = "form-control", @id = "Region" })
                @Html.ValidationMessageFor(x => x.CustomerEditViewModel.SelectedRegionId, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}
<div class="row">
    <div class="col-md-12">
        <a asp-page="./Index">Back to List</a>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
    $('#Country').change(function () {
      var selectedCountry = $("#Country").val();
      var regionsSelect = $('#Region');
      regionsSelect.empty();
      if (selectedCountry != null && selectedCountry != '') {
        $.ajax({
          type: "POST",
          url: "/Customers/Create?handler=Regions",
          beforeSend: function (xhr) {
            xhr.setRequestHeader("XSRF-TOKEN",
              $('input:hidden[name="__RequestVerificationToken"]').val());
          },
          data: selectedCountry,
          contentType: "json; charset=utf-8",
          success: function (regions) {
            if (regions != null && !jQuery.isEmptyObject(regions)) {
              regionsSelect.append($('<option/>', {
                value: null,
                text: ""
              }));
              $.each(regions, function (index, region) {
                regionsSelect.append("<option value='" + region.value + "'>" + region.text + "</option>");
              });
            };
          },
          failure: function (response) {
            alert(response);
          }
        });
      }
    });
    </script>
}